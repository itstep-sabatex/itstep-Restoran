// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestoranClient.Data;

namespace RestoranClientNoBase.Data.Migrations
{
    [DbContext(typeof(RestoranDbContext))]
    partial class RestoranDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RestoranClient.Models.Abonent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("abonent");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "table 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "table 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "table 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "table 4"
                        });
                });

            modelBuilder.Entity("RestoranClient.Models.ClientCards", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("discount");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("ClientCards");
                });

            modelBuilder.Entity("RestoranClient.Models.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Bill")
                        .HasColumnType("TEXT")
                        .HasColumnName("bill");

                    b.Property<decimal>("Count")
                        .HasColumnType("TEXT")
                        .HasColumnName("count");

                    b.Property<int>("ItemsId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("items_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bill = 100.00m,
                            Count = 2.000m,
                            ItemsId = 2,
                            OrderId = 1,
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 2,
                            Bill = 90.00m,
                            Count = 2.000m,
                            ItemsId = 8,
                            OrderId = 2,
                            Price = 45.00m
                        },
                        new
                        {
                            Id = 3,
                            Bill = 150.00m,
                            Count = 0.500m,
                            ItemsId = 14,
                            OrderId = 3,
                            Price = 300.00m
                        },
                        new
                        {
                            Id = 4,
                            Bill = 45.00m,
                            Count = 1.000m,
                            ItemsId = 4,
                            OrderId = 4,
                            Price = 45.00m
                        },
                        new
                        {
                            Id = 5,
                            Bill = 50.00m,
                            Count = 2.000m,
                            ItemsId = 7,
                            OrderId = 5,
                            Price = 25.00m
                        },
                        new
                        {
                            Id = 6,
                            Bill = 75.00m,
                            Count = 3.000m,
                            ItemsId = 7,
                            OrderId = 5,
                            Price = 25.00m
                        },
                        new
                        {
                            Id = 7,
                            Bill = 100.00m,
                            Count = 2.000m,
                            ItemsId = 2,
                            OrderId = 8,
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 8,
                            Bill = 50.00m,
                            Count = 2.000m,
                            ItemsId = 7,
                            OrderId = 9,
                            Price = 25.00m
                        },
                        new
                        {
                            Id = 9,
                            Bill = 400.00m,
                            Count = 10.000m,
                            ItemsId = 15,
                            OrderId = 9,
                            Price = 40.00m
                        },
                        new
                        {
                            Id = 10,
                            Bill = 3000.00m,
                            Count = 10.000m,
                            ItemsId = 13,
                            OrderId = 9,
                            Price = 300.00m
                        },
                        new
                        {
                            Id = 11,
                            Bill = 5000.00m,
                            Count = 5.000m,
                            ItemsId = 16,
                            OrderId = 9,
                            Price = 1000.00m
                        },
                        new
                        {
                            Id = 12,
                            Bill = 1900.00m,
                            Count = 20.000m,
                            ItemsId = 11,
                            OrderId = 9,
                            Price = 95.00m
                        });
                });

            modelBuilder.Entity("RestoranClient.Models.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bear",
                            Price = 45.00m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Borch",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 3,
                            Name = "bread",
                            Price = 5.00m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Chicken soup",
                            Price = 45.00m
                        },
                        new
                        {
                            Id = 5,
                            Name = "chicken with poatoes",
                            Price = 95.00m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Coca Cola",
                            Price = 40.00m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cofee",
                            Price = 25.00m
                        },
                        new
                        {
                            Id = 8,
                            Name = "Duck soup",
                            Price = 45.00m
                        },
                        new
                        {
                            Id = 9,
                            Name = "IceCream",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 10,
                            Name = "ketchup",
                            Price = 300.00m
                        },
                        new
                        {
                            Id = 11,
                            Name = "pizza",
                            Price = 95.00m
                        },
                        new
                        {
                            Id = 12,
                            Name = "Salad",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = 13,
                            Name = "shashlik",
                            Price = 300.00m
                        },
                        new
                        {
                            Id = 14,
                            Name = "Vodka",
                            Price = 300.00m
                        },
                        new
                        {
                            Id = 15,
                            Name = "water",
                            Price = 40.00m
                        },
                        new
                        {
                            Id = 16,
                            Name = "Whiskey",
                            Price = 1000.00m
                        });
                });

            modelBuilder.Entity("RestoranClient.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AbonentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("abonent_id");

                    b.Property<decimal?>("Bill")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndOrder")
                        .HasColumnType("TEXT")
                        .HasColumnName("end_order");

                    b.Property<string>("FixedSource")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Paid")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeOrder")
                        .HasColumnType("TEXT")
                        .HasColumnName("time_order");

                    b.Property<int?>("WaiterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("waiter_id");

                    b.HasKey("Id");

                    b.HasIndex("AbonentId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AbonentId = 1,
                            Bill = 290.00m,
                            FixedSource = "Kitchen",
                            Paid = 0m,
                            TimeOrder = new DateTime(2020, 2, 24, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            WaiterId = 2
                        },
                        new
                        {
                            Id = 4,
                            AbonentId = 3,
                            Bill = 140.00m,
                            FixedSource = "Kitchen",
                            Paid = 0m,
                            TimeOrder = new DateTime(2020, 2, 24, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            WaiterId = 1
                        },
                        new
                        {
                            Id = 5,
                            AbonentId = 4,
                            Bill = 125.00m,
                            FixedSource = "Bar",
                            Paid = 0m,
                            TimeOrder = new DateTime(2020, 2, 24, 16, 5, 0, 0, DateTimeKind.Unspecified),
                            WaiterId = 1
                        },
                        new
                        {
                            Id = 2,
                            AbonentId = 2,
                            Bill = 485.00m,
                            FixedSource = "Kitchen",
                            Paid = 0m,
                            TimeOrder = new DateTime(2020, 2, 24, 16, 10, 0, 0, DateTimeKind.Unspecified),
                            WaiterId = 2
                        },
                        new
                        {
                            Id = 3,
                            AbonentId = 2,
                            Bill = 302.50m,
                            FixedSource = "Bar",
                            Paid = 0m,
                            TimeOrder = new DateTime(2020, 2, 24, 16, 10, 0, 0, DateTimeKind.Unspecified),
                            WaiterId = 2
                        },
                        new
                        {
                            Id = 7,
                            AbonentId = 1,
                            Bill = 200.00m,
                            FixedSource = "Kitchen",
                            Paid = 0m,
                            TimeOrder = new DateTime(2020, 2, 24, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            WaiterId = 2
                        },
                        new
                        {
                            Id = 6,
                            AbonentId = 3,
                            Bill = 160.00m,
                            FixedSource = "Bar",
                            Paid = 0m,
                            TimeOrder = new DateTime(2020, 2, 24, 16, 50, 0, 0, DateTimeKind.Unspecified),
                            WaiterId = 1
                        },
                        new
                        {
                            Id = 8,
                            AbonentId = 1,
                            Bill = 100.00m,
                            FixedSource = "Kitchen",
                            Paid = 0m,
                            TimeOrder = new DateTime(2020, 4, 8, 15, 16, 5, 357, DateTimeKind.Unspecified),
                            WaiterId = 1
                        },
                        new
                        {
                            Id = 9,
                            AbonentId = 4,
                            Bill = 10350.00m,
                            FixedSource = "Bar",
                            Paid = 0m,
                            TimeOrder = new DateTime(2020, 4, 8, 15, 16, 17, 813, DateTimeKind.Unspecified),
                            WaiterId = 1
                        });
                });

            modelBuilder.Entity("RestoranClient.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Andrea",
                            Password = "1111"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Suzane",
                            Password = "2222"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ivanka",
                            Password = "3333"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ruslan",
                            Password = "4444"
                        });
                });

            modelBuilder.Entity("RestoranClient.Models.UserGroup", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Group")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "Group");

                    b.ToTable("UserGroups");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Group = 0
                        },
                        new
                        {
                            UserId = 2,
                            Group = 0
                        },
                        new
                        {
                            UserId = 3,
                            Group = 0
                        },
                        new
                        {
                            UserId = 4,
                            Group = 1
                        },
                        new
                        {
                            UserId = 3,
                            Group = 1
                        });
                });

            modelBuilder.Entity("RestoranClient.Models.Detail", b =>
                {
                    b.HasOne("RestoranClient.Models.Order", null)
                        .WithMany("Details")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestoranClient.Models.Order", b =>
                {
                    b.HasOne("RestoranClient.Models.Abonent", "Abonent")
                        .WithMany()
                        .HasForeignKey("AbonentId");

                    b.Navigation("Abonent");
                });

            modelBuilder.Entity("RestoranClient.Models.UserGroup", b =>
                {
                    b.HasOne("RestoranClient.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestoranClient.Models.Order", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
